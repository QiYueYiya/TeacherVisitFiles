name: 'Build and Release Windows EXE'

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: '版本号（格式：x.x.x）'
        required: true
        type: string
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: windows-latest
    env:
      VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.tag_name || github.ref_name }}
    steps:
      - name: Clone TeacherVisit Repo
        uses: actions/checkout@v4
        with:
          repository: QiYueYiya/TeacherVisit
          ref: ${{ env.VERSION }}
          token: ${{ secrets.TEACHERVISIT_TOKEN }}

      - name: Clone TeacherVisitFiles Repo
        uses: actions/checkout@v4
        with:
          path: TeacherVisitFiles

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Set version
        id: set_version
        shell: python
        env:
          version: ${{ env.VERSION }}
        run: |
          import json, os
          path = 'files/TeacherVisit.json'
          with open(path, encoding='utf-8') as f:
              data = json.load(f)
          data['latest_version'] = os.environ['version']
          with open(path, 'w', encoding='utf-8') as f:
              json.dump(data, f, ensure_ascii=False, indent=4)

      - name: Edit file_version_info.txt
        id: edit_file_version_info
        shell: python
        env:
          version: ${{ env.VERSION }}
        run: |
          import re, os
          version = os.environ['version']
          info_path = "file_version_info.txt"
          major, minor, patch = map(int, version.split('.'))
          version_tuple = f"({major}, {minor}, {patch}, 0)"
          with open(info_path, 'r', encoding='utf-8') as file:
              content = file.read()
          content = re.sub(r'\(\d+, \d+, \d+, \d+\)', version_tuple, content)
          content = re.sub(r"u'\d+\.\d+\.\d+'", f"u'{version}'", content)
          with open(info_path, 'w', encoding='utf-8') as file:
              file.write(content)

      - name: Build with PyInstaller
        run: |
          pyinstaller main.spec
          move dist\main.exe "dist\TeacherVisit.exe"
          pyinstaller install.spec
          move dist\install.exe "dist\TeacherVisit_${{ env.VERSION }}.exe"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TeacherVisit ${{ env.VERSION }}
          path: "dist/TeacherVisit_${{ env.VERSION }}.exe"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          name: TeacherVisit ${{ env.VERSION }}
          files: "dist/TeacherVisit_${{ env.VERSION }}.exe"

      - name: Commit and push TeacherVisit.json
        run: |
          cp files/TeacherVisit.json TeacherVisitFiles/TeacherVisit.json
          cd TeacherVisitFiles
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add TeacherVisit.json
          git commit -m "update TeacherVisit.json for ${{ env.VERSION }}" || echo "No changes to commit"
          git push origin HEAD:main

  sync:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout GitHub repository
        uses: actions/checkout@v4
        
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Add Gitee SSH Key
        env:
          GITEE_SSH_KEY: ${{ secrets.GITEE_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$GITEE_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan gitee.com >> ~/.ssh/known_hosts

      - name: Clone Gitee repository
        run: |
          git clone git@gitee.com:qiyueyi/TeacherVisitFiles.git gitee-repo-linux

      - name: Copy file
        run: |
          cp TeacherVisit.json gitee-repo-linux/TeacherVisit.json

      - name: Commit and push
        working-directory: ./gitee-repo-linux
        run: |
          git add TeacherVisit.json
          git commit -m "Update TeacherVisit.json from GitHub"
          git push origin main
